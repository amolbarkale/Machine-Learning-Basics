# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TqCz5metZ2D_bXbD_h3__u5BhguG8acw
"""



import pandas as pd

athletes_df = pd.read_csv('/content/Athletes.csv')
coaches_df = pd.read_csv('/content/Coaches.csv')
entries_gender_df = pd.read_csv('/content/EntriesGender.csv')
medals_df = pd.read_csv('/content/Medals.csv')
teams_df = pd.read_csv('/content/Teams.csv')

print("Athletes DataFrame:")
display(athletes_df.head())

print("\nCoaches DataFrame:")
display(coaches_df.head())

print("\nEntriesGender DataFrame:")
display(entries_gender_df.head())

print("\nMedals DataFrame:")
display(medals_df.head())

print("\nTeams DataFrame:")
display(teams_df.head())

"""**Step 1: Filter Athletes**: Filter the `athletes_df` to include only the countries (NOCs) that are present in the `medals_df`."""

# Get the list of countries from the medals_df
medal_countries = medals_df['Team/NOC'].unique()

# Filter athletes_df to include only athletes from countries in medal_countries
filtered_athletes_df = athletes_df[athletes_df['NOC'].isin(medal_countries)]

display(filtered_athletes_df.head())

"""**Step 2: Count Athletes per Country**: Group the filtered `athletes_df` by NOC and count the number of athletes in each country."""

# Group by NOC and count the number of athletes
athlete_counts = filtered_athletes_df['NOC'].value_counts().reset_index()
athlete_counts.columns = ['NOC', 'Number of Athletes']

display(athlete_counts.head())

"""**Step 3: Merge with Medals Data**: Merge the athlete counts into the `medals_df` based on the country (Team/NOC)."""

# Merge athlete_counts with medals_df
medals_with_athletes = pd.merge(medals_df, athlete_counts, left_on='Team/NOC', right_on='NOC', how='left')

# Drop the redundant 'NOC' column from the merge
medals_with_athletes = medals_with_athletes.drop('NOC', axis=1)

# Calculate the success ratio
medals_with_athletes['Success Ratio'] = medals_with_athletes['Total'] / medals_with_athletes['Number of Athletes'] * 100

display(medals_with_athletes.head(93))

teams_df

# Calculate the counts of Men and Women in the 'Event' column
gender_counts = teams_df['Event'].value_counts().reset_index()
gender_counts.columns = ['Gender', 'Count']

# Filter to include only 'Men' and 'Women'
gender_counts_filtered = gender_counts[gender_counts['Gender'].isin(['Men', 'Women'])].copy()


# Calculate the total count for Men and Women
total_men_women = gender_counts_filtered['Count'].sum()

# Calculate the percentage of participation
gender_counts_filtered.loc[:, 'Percentage'] = (gender_counts_filtered['Count'] / total_men_women) * 100

display(gender_counts_filtered)

# Count the number of unique NOCs for each Discipline in teams_df
country_counts_per_discipline = teams_df.groupby('Discipline')['NOC'].nunique().reset_index()
country_counts_per_discipline.columns = ['Discipline', 'Number of Participating Countries']

# Sort the results to see which disciplines have the most participating countries
country_counts_per_discipline_sorted = country_counts_per_discipline.sort_values(by='Number of Participating Countries', ascending=False)

display(country_counts_per_discipline_sorted.head())

"""### Insight 1: Top 10 Countries by Total Medals

**Question:** Which countries won the most medals in total?
"""

# Sort medals_df by 'Total' medals in descending order
top_10_countries_medals = medals_df.sort_values(by='Total', ascending=False).head(10)

display(top_10_countries_medals)

"""**Explanation:** This table shows the top 10 countries that won the highest number of total medals. The United States of America is at the top with 113 medals.

### Insight 2: Medal Distribution of the Top Country

**Question:** How are the medals distributed (Gold, Silver, Bronze) for the country with the most total medals?
"""

# Get the data for the top country (United States of America)
usa_medals = medals_df[medals_df['Team/NOC'] == 'United States of America']

display(usa_medals)

"""**Explanation:** This shows the breakdown of Gold, Silver, and Bronze medals won by the United States of America, the country with the highest total medal count.

### Insight 3: Countries with the Highest Success Ratio (Medals per Athlete)

**Question:** Which countries had the highest success ratio (total medals per athlete)?
"""

# Sort the medals_with_athletes DataFrame by 'Success Ratio' in descending order
top_success_ratio_countries = medals_with_athletes.sort_values(by='Success Ratio', ascending=False).head(10)

display(top_success_ratio_countries)

"""**Explanation:** This table shows the top 10 countries based on their 'Success Ratio', which is the total number of medals won divided by the number of athletes from that country. A higher ratio suggests more medals were won relative to the size of their athlete delegation.

### Insight 4: Gender Participation in Teams

**Question:** What is the percentage distribution of Men's and Women's teams in the dataset?
"""

# Calculate the counts of Men and Women in the 'Event' column from teams_df
gender_counts = teams_df['Event'].value_counts().reset_index()
gender_counts.columns = ['Gender', 'Count']

# Filter to include only 'Men' and 'Women'
gender_counts_filtered = gender_counts[gender_counts['Gender'].isin(['Men', 'Women'])].copy()

# Calculate the total count for Men and Women
total_men_women = gender_counts_filtered['Count'].sum()

# Calculate the percentage of participation
gender_counts_filtered.loc[:, 'Percentage'] = (gender_counts_filtered['Count'] / total_men_women) * 100

display(gender_counts_filtered)

"""**Explanation:** This shows the percentage of teams that are categorized as 'Men' or 'Women' in the `teams_df`, giving us an idea of gender representation in team events.

### Insight 5: Disciplines with the Most Participating Countries

**Question:** Which disciplines have the highest number of participating countries?
"""

# Display the sorted list of disciplines by the number of participating countries (calculated earlier)
display(country_counts_per_discipline_sorted.head(10))

"""**Explanation:** This table lists the top 10 disciplines based on the number of unique countries that have teams participating in them, suggesting a wider global reach and potentially higher competition in these sports based on this metric.

### Insight 6: Total Number of Athletes from Top Medal-Winning Countries

**Question:** What is the total number of athletes from the top 10 medal-winning countries?
"""

# Merge the top 10 countries by medals with the athlete counts
top_10_countries_athlete_counts = pd.merge(top_10_countries_medals, athlete_counts, left_on='Team/NOC', right_on='NOC', how='left')

display(top_10_countries_athlete_counts[['Team/NOC', 'Total', 'Number of Athletes']])

"""**Explanation:** This shows the total number of athletes that represented each of the top 10 medal-winning countries.

### Insight 7: Top Disciplines by Female and Male Entries

**Question:** Which disciplines have the highest number of female and male entries?
"""

# Sort entries_gender_df by 'Female' in descending order and display top 5
print("Top 5 Disciplines by Female Entries:")
display(entries_gender_df.sort_values(by='Female', ascending=False).head())

# Sort entries_gender_df by 'Male' in descending order and display top 5
print("\nTop 5 Disciplines by Male Entries:")
display(entries_gender_df.sort_values(by='Male', ascending=False).head())

"""**Explanation:** These tables show the disciplines with the highest number of female and male participants, respectively, based on the entry numbers.

### Insight 8: Disciplines with Significant Gender Disparity in Entries

**Question:** Which disciplines have a significant difference in the number of male and female entries?
"""

# Calculate the absolute difference between male and female entries
entries_gender_df['Gender Difference'] = abs(entries_gender_df['Male'] - entries_gender_df['Female'])

# Sort by the absolute difference in descending order
gender_disparity_disciplines = entries_gender_df.sort_values(by='Gender Difference', ascending=False).head(10)

display(gender_disparity_disciplines[['Discipline', 'Female', 'Male', 'Gender Difference']])

"""**Explanation:** This table highlights disciplines where there is a large difference between the number of male and female entries, indicating potential gender disparity in participation within those sports based on the entry data.

### Insight 9: Total Number of Entries Across All Disciplines

**Question:** What is the total number of entries across all disciplines?
"""

# Sum the 'Total' column in the entries_gender_df
total_entries = entries_gender_df['Total'].sum()

print(f"Total number of entries across all disciplines: {total_entries}")

"""**Explanation:** This gives us the overall scale of participation in the Olympics based on the total number of entries recorded in the `entries_gender_df`.

### Insight 10: Disciplines with Zero Female or Male Entries

**Question:** Which disciplines have entries for only one gender?
"""

# Filter for disciplines with zero female entries
female_only_disciplines = entries_gender_df[entries_gender_df['Female'] == 0]

print("Disciplines with Zero Female Entries (Male Only or Mixed):")
display(female_only_disciplines[['Discipline', 'Female', 'Male', 'Total']])

# Filter for disciplines with zero male entries
male_only_disciplines = entries_gender_df[entries_gender_df['Male'] == 0]

print("\nDisciplines with Zero Male Entries (Female Only or Mixed):")
display(male_only_disciplines[['Discipline', 'Female', 'Male', 'Total']])

"""**Explanation:** These tables show disciplines where the entry data indicates participation from only one gender, or potentially includes mixed-gender events where one gender has zero dedicated entries."""